#!/bin/bash
#
# This script starts Solr on localhost, creates a core with "solr create",
# stops Solr, and then starts Solr as normal.
# Any arguments are passed to the "solr create".
# if you specify -cloud, it will create a collection instead
# To simply create a core:
#      docker run -P -d solr solr-create -c mycore
# To create a core from mounted config:
#      docker run -P -d -v $PWD/myconfig:/myconfig solr solr-create -c mycore -d /myconfig
# To create a core in cloud mode:
#      docker run -P -d solr solr-create -cloud -c mycollection

set -euo pipefail
echo "Executing $0" "$@"

if [[ "${VERBOSE:-}" = "yes" ]]; then
    set -x
fi

if [ -d /opt/docker-solr/scripts/run-initdb ]; then
  . /opt/docker-solr/scripts/run-initdb
fi

SOLR_CREATE_ARGS=()
SOLR_LOCAL_ARGS=()
SOLR_FINAL_ARGS=("-f")
while (( $# > 0 )); do
  case "$1" in
  -c)
    shift
    ARG_CORE_NAME="$1"
    SOLR_CREATE_ARGS+=("-c" "$1")
    shift
    ;;
  -d)
    shift
    SOLR_CREATE_ARGS+=("-d" "$1")
    shift
    ;;
  -p)
    shift
    SOLR_CREATE_ARGS+=("-p" "$1")
    SOLR_LOCAL_ARGS+=("-p" "$1")
    SOLR_FINAL_ARGS+=("-p" "$1")
    shift
    ;;
  -cloud)
    SOLR_LOCAL_ARGS+=('-cloud')
    SOLR_FINAL_ARGS+=('-cloud')
    ARG_CLOUD="$1"
    shift
    ;;
  -V)
    SOLR_CREATE_ARGS+=("$1")
    shift
    ;;
  -n)
    shift
    SOLR_CREATE_ARGS+=("-n" "$1")
    shift
    ;;
  -shards)
    shift
    SOLR_CREATE_ARGS+=("-shards" "$1")
    shift
    ;;
  -replicationFactor)
    shift
    SOLR_CREATE_ARGS+=("-replicationFactor" "$1")
    shift
    ;;
  -h|--help)
    shift
    cat <<EOM
Usage: solr create [-c name] [-d confdir] [-n configName] [-shards #] [-replicationFactor #] [-p port] [-V]

Start Solr in the background, create the core or collection, then stop Solr and restart it in the foreground
EOM
  exit 0
  ;;
  *)
    echo "Unexpected argument: $1"
    exit 1
  esac
done

if [[ -z "${ARG_CORE_NAME:-}" ]]; then
  ARG_CORE_NAME=_default
fi

if [[ -v SOLR_PORT ]] && ! grep -E -q '^[0-9]+$' <<<"$SOLR_PORT"; then
  echo "Invalid SOLR_PORT=$SOLR_PORT environment variable specified"
  exit 1
fi

# We need to see if we are running first time (when we need to create the core
# or collection), or booting an existing container (when we don't).
SENTINEL="${SOLR_HOME:-/opt/solr/server/solr}/.created-$ARG_CORE_NAME"
if [ -e "$SENTINEL" ]; then
    echo "$SENTINEL exists; skipping core creation"
else
  (
     export SOLR_HOST=localhost
     start-local-solr "${SOLR_LOCAL_ARGS[@]}"

      echo "Creating core or collection with:" "${SOLR_CREATE_ARGS[@]}"
      /opt/solr/bin/solr create "${SOLR_CREATE_ARGS[@]}"

      echo "Created"
      touch "$SENTINEL"

      stop-local-solr
  )
fi
exec solr "${SOLR_FINAL_ARGS[@]}"
